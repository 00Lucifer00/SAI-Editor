- Functionality to check for 'wrong' code; reads selected line for stuff like unused parameters having values, wrong comments, incorrect use of parameters, etc. etc
- Possibly take the workspace-idea by Event Horizon
- Checkbox to only show event_types and action_types for the chosen source_type (so for gameobjects we would hide SMART_EVENT_SPELLHIT, etc.)
- Implement a SQLite database containing required tables for the tool (creature_template, creature, gameobject, smart_scripts, quest_template, item_template, etc.) and use this if user wants to not use his local database
  - Make this a download option instead (?). The SQLite file would become over 100 MB if we'd do this and it'd make no sense if we'd never use the data.
- Make permanent tooltips support multilines (or decrease length of tooltips to a fixed size)
- Implement conditions support
- Implement creature_text support
- Add support to add specific flags to the source. If you for example want a creature to have a gossip, the npcflag also needs to be set accordingly. No idea yet on how to implement this in a good looking way
- Add support to the SQLite database for each expansion of the game and keep this up-to-date
- Implement user-controlled SAI templates which can also be shared between users and possibly uploaded somewhere
- Add a tutorial to the application
- Setting to control the comment generating (rules to follow and whatnot)
- Take a look into reloading the smart_scripts table (thus executing the `.reload smart` GM command in-game or in the console) from the application.
- Make it possible to update the Updater for the users. Once found:
  - Perhaps add a new item to the dropbox and filelist.txt which would basically be an updater for the updater. Once it was created and SAI-Editor is launched, it checks if the second updater exists. If it does, it runs that instead of the SAI-Editor. Thus it closes the SAI-Editor, replaces the SAI-Editor Updater and voila!
  - Pass on a parameter to Updater's constructor to determine whether or not it's called by the form instead of from hand. This way we determine whether or not we should open up SAI-Editor.exe when the updater is closed
  - The updater currently calls the survey X times when it updates (X being the amount of files that are being updated). This was testcode that I forgot to remove.

- Functionality to check for 'wrong' code; reads selected line for stuff like unused parameters having values, wrong comments, incorrect use of parameters, etc. etc
- Possibly take the workspace-idea by Event Horizon
- Checkbox to only show event_types and action_types for the chosen source_type (so for gameobjects we would hide SMART_EVENT_SPELLHIT, etc.)
- Possibly pick another logo, this is ugly and boring
- Make the application support more platforms than just Windows
- Implement the 'Link from' field
- Allow resizing the application but just make everything scroll-able if it becomes smaller
- Implement a sqlite database containing required tables for the tool (creature_template, creature, gameobject, smart_scripts, quest_template, item_template, etc.) and use this if user wants to not use his local database
  - Make this a download option instead (?). The SQLite file would become over 100 MB if we'd do this and it'd make no sense if we'd never use the data.
- Move the parameter button handling (like SMART_ACTION_CAST -> param1 has a button to search for spells) to the SQLite database so we have less code in the application?
- Find a way around the annoying 500-line limit when inserting SQLite data. When found, implement all sounds into the SQLite database.
- Fix the logic of the multiselectform (try with unit flags to see how it's broken)
- Make permanent tooltips support multilines (or decrease length of tooltips to a fixed size)
- Implement SAI conditions support
- Implement creature text support (?)
- Convert all 'new xxxForm().ShowDialog(this)' to use 'using'
- Add support to add specific flags to the source. If you for example want a creature to have a gossip, the npcflag also needs to be set accordingly. No idea yet on how to implement this in a good looking way
- Properly implement keeping track SmartScripts in the SmartScriptListView class. Currently we base everything on `entryorguid` together with `id` but this means we can't change the `id` value by hand, or have `id`'s with numbers that are already used (like -1)
  - Also needed to implement the AllowChangingEntryAndSourceType setting (which is needed to create actionlists unless someone else has a better implementation idea for this)

Needs to be further into development:
- Make all tabindexes work completely (need to finish pretty much everything before doing this)
- Improve implementation of the SearchForLinkForm to do the following:
  - Only allow to link to lines with a higher smart_scripts.id
    - This could possibly also be implemented as a feature to refactor the SAI of the creature with the id's to be re-ordered (possibly based on a YesNo messagebox question)
  - We also need to adjust the id chosen to link from/to so the script will still work

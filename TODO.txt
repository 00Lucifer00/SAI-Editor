- Functionality to check for 'wrong' code reads selected line for stuff like unused parameters having values, wrong comments, incorrect use of parameters, etc. etc
- Checkbox if the user wants to fill in smart_scripts.id gaps
- Possibly take the workspace-idea by Event Horizon
- Checkbox to only show event_types and action_types for the chosen source_type (so for gameobjects we would hide SMART_EVENT_SPELLHIT, etc.)
- Possibly pick another logo, this is fugly and boring
- Can't use copy or paste in the numeric-only fields (entry, type id, parameters, etc.) (numericField_KeyPress)
- Make the column sorter work with numbers as well
- Find a good-looking way to display _ALL_ info in the listview without having to scroll (is there any?)
- Make the application support more platforms than just Windows
- Create a checkbox to only show 'basic' data in the listview (entryorguid, id, event_type, action_type, target_type, comment)
  - Also implement this in the SearchForLink form
- Implement the 'Link from' field
- The selected item looks as if it is no longer selected once the user uses a button to open a new form, like event_flags
- Allow resizing the application but just make everything scroll-able if it becomes smaller
- For some reason it's not possible to cancel the threads ran while searching for either actionlists or areatriggers, very most likely related to the fact we use 'return' instead of 'break'
  - This also causes a second issue in which an exception is thrown when closing the search form WHILE it's searching. The exception, logically, says the object trying to be accessed (crossthread) is already removed/disposed. This makes sense, unlike the issue described one line up.
- (?) Implement a sqlite database containing required tables for the tool (creature_template, creature, gameobject, smart_scripts, etc.) and use this if user wants to not use his local database
  - Figure out why the 'finally' block is called right when we call FillListViewWithSpells instead of actually waiting till the process finished, possibly related to above line...
- (?) Possible move the parameter button handling (like SMART_ACTION_CAST -> param1 has a button to search for spells) to the SQLite database so we have less code in the application?
- Add quotes around all SQL query input fields to prevent wrong errors. For example when searching for a creature and having the search criteria being a string such as "example" while it tries to search for creature_template.entry, it will throw an error saying something unrelated (because it'll be executed as "FROM creature_template WHERE entry = example").

Needs to be further into development:
- Make all tabindexes work completely (need to finish pretty much first)
- Improve implementation of the SearchForLinkForm to do the following:
  - Only allow to link to lines with a higher smart_scripts.id
    - This could possibly also be implemented as a feature to refactor the SAI of the creature with the id's to be re-ordered (posibly based on a YesNo messagebox question)
  - We also need to adjust the id chosen to link from/to so the script will still work
